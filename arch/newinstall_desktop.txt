fdisk -l /dev/sda
fdisk -t dos /dev/sda

n 

boot +10G
/    rest

w

mkfs.ext2 /dev/sda1 # /boot
mkfs.ext4 /dev/sda2 # / (root file system)


mount -v /dev/sda2 /mnt
mkdir /mnt/boot
mount -v /dev/sda1 /mnt/boot

pacstrap -i /mnt base base-devel linux
genfstab -U -p /mnt >> /mnt/etc/fstab

arch-chroot /mnt

pacman -S --noconfirm vim mc dnsutils traceroute net-tools openssh unace unarj unrar zip p7zip grub sudo os-prober

# after installation check and added for internet connection
#vim /etc/resolv.conf

cat > /etc/resolv.conf << "EOF"
nameserver 192.168.1.1

EOF 

#echo "nameserver 192.168.1.1" > /etc/resolv.conf

echo user.local >/etc/hostname
#vim /etc/hosts

cat > /etc/hosts << "EOF"
127.0.0.1       localhost.localdomain   localhost user.local

EOF 

rm -rfv /etc/localtime

ln -s /usr/share/zoneinfo/Asia/Bangkok /etc/localtime

hwclock --systohc --utc

sed -i 's@#en_US\.U@en_US\.U@' /etc/locale.gen

locale-gen

echo LANG=en_US.UTF-8 > /etc/locale.conf

export LANG=en_US.UTF-8

cat > /etc/systemd/network/eth0.network << "EOF"
# Begin /etc/systemd/network/eth0.network
[Match]
Name=eth0

[Network]
Address=192.168.1.130/24
Gateway=192.168.1.1
DNS=8.8.8.8
DNS=8.8.4.4

# End /etc/systemd/network/eth0.network
EOF

#Change enp0s3 to eth0 with static ip address
>
>>		grep -n ^GRUB_CMDLINE_LINUX_DEFAULT /etc/default/grub
>
>>		vim +4 /etc/default/grub
>
>>		Go to /etc/default/grub and find 4:GRUB_CMDLINE_LINUX_DEFAULT="quiet"
>
>>		replaced with GRUB_CMDLINE_LINUX_DEFAULT="ipv6.disable=1 net.ifnames=0 quiet"

vim /etc/mkinitcpio.conf
Added usr in /etc/mkinitcpio.conf if /usr used in partition
HOOKS=(base udev autodetect modconf block filesystems keyboard usr fsck)
HOOKS=(base udev autodetect modconf block keyboard keymap resume filesystems fsck) # from installing manjaro.org

cd /boot
mkinitcpio -p linux	

grub-install --target=i386-pc --recheck /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg





#Regenerage grub.cfg
grub-mkconfig -o /boot/grub/grub.cfg
>>		reboot



#Root login
vim /etc/ssh/sshd_config

#PermitRootLogin prohibit-password
PermitRootLogin yes


# To preventing mounting automatically
systemctl mask tmp.mount

# set the current time
timedatectl set-ntp true

Change date time
timedatectl set-time "yyyy-MM-dd hh:mm:ss"
timedatectl set-time "2017-08-03 1:44:60"


Added user
useradd -m -g users -G audio,lp,optical,storage,video,games,power,scanner,wheel -s /bin/bash user
passwd user

passwd root


# To give user root access 
visduo

%wheel ALL=(ALL) ALL

#To start network
systemctl enable systemd-networkd
systemctl enable sshd

exit

umount -l /mnt
reboot

# after installation check and added for internet connection
vim /etc/resolv.conf
nameserver 192.168.1.1




 cat /etc/resolv.conf
# Generated by resolvconf
domain localdomain
nameserver 192.168.153.2


sudo pacman -S composer apache
sudo pacman -S gcc
pip install --user django
pip install --user scrapy beautifulsoup4 lxml html5lib
pip install --user SQLAlchemy mysqlclient

sudo systemctl start httpd.service
sudo systemctl enable httpd.service
https://wiki.archlinux.org/index.php/Apache_HTTP_Server


sudo systemctl status mariadb
sudo systemctl enable mariadb

git clone https://github.com/phpmyadmin/phpmyadmin.git


https://github.com/phpmyadmin/phpmyadmin

https://www.crummy.com/software/BeautifulSoup/bs4/doc/
https://django.readthedocs.io/en/latest/intro/contributing.html
https://wiki.archlinux.org/index.php/MySQL
https://github.com/getanewsletter/BeautifulSoup4

sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql

sudo systemctl start mariadb.service
sudo systemctl status mariadb.service

mysql_secure_installation


To start mysqld at boot time you have to copy
support-files/mysql.server to the right place for your system

PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !
To do so, start the server, then issue the following commands:

'/usr/bin/mysqladmin' -u root password 'new-password'
'/usr/bin/mysqladmin' -u root -h user.local password 'new-password'

Alternatively you can run:
'/usr/bin/mysql_secure_installation'

which will also give you the option of removing the test
databases and anonymous user created by default.  This is
strongly recommended for production servers.

See the MariaDB Knowledgebase at http://mariadb.com/kb or the
MySQL manual for more instructions.

You can start the MariaDB daemon with:
cd '/usr' ; /usr/bin/mysqld_safe --datadir='/var/lib/mysql'

You can test the MariaDB daemon with mysql-test-run.pl
cd '/usr/mysql-test' ; perl mysql-test-run.pl

Please report any problems at http://mariadb.org/jira

The latest information about MariaDB is available at http://mariadb.org/.
You can find additional information about the MySQL part at:
http://dev.mysql.com
Consider joining MariaDB's strong and vibrant community:
https://mariadb.org/get-involved/



#apache

 mkdir /etc/httpd/conf/vhosts
 nano /etc/httpd/conf/vhosts/domainname1.dom
 In the last step, Include the single configurations in your /etc/httpd/conf/httpd.conf:

#Enabled Vhosts:
Include conf/vhosts/domainname1.dom

<VirtualHost *:80>
    ServerAdmin webmaster@domainname1.dom
    DocumentRoot "/home/user/http/domainname1.dom"
    ServerName domainname1.dom
    ServerAlias domainname1.dom
    ErrorLog "/var/log/httpd/domainname1.dom-error_log"
    CustomLog "/var/log/httpd/domainname1.dom-access_log" common

    <Directory "/home/user/http/domainname1.dom">
        Require all granted
    </Directory>
</VirtualHost>
[Mon Jan 08 21:17:43.582340 2018] [core:error] [pid 2549:tid 139958673168128] (13)Permission denied: [client 192.168.153.1:54122] AH00035: access to / denied (filesystem path '/home/user/working') because search permissions are missing on a component of the path

https://wiki.archlinux.org/index.php/Apache_HTTP_Server
https://wiki.apache.org/httpd/13PermissionDenied
namei -m /usr/local/apache2/htdocs/foo/bar.html



cat /etc/httpd/conf/httpd.conf| grep mod_rewrite
https://bbs.archlinux.org/viewtopic.php?id=41606


https://www.ostechnix.com/how-to-install-gnome-desktop-environment-in-arch-linux/

sudo pacman -S xorg xorg-server
sudo pacman -S gnome
sudo systemctl start gdm.service
sudo systemctl enable gdm.service


https://steemit.com/utopian-io/@farahnabilla/how-to-install-desktop-environment-on-arch-linux
https://itsfoss.com/install-arch-linux/
https://www.maketecheasier.com/set-up-xfce-arch-linux/
https://www.2daygeek.com/install-xfce-mate-kde-gnome-cinnamon-lxqt-lxde-budgie-deepin-enlightenment-desktop-environment-on-arch-linux/


chrome 
https://aur.archlinux.org/packages/google-chrome/
makepkg -sri

firefox
pacman -S firefox

https://www.akitaonrails.com/2017/01/10/arch-linux-best-distro-ever

sudo pacman -Sy postgresql
sudo -u postgres -i
initdb --locale $LANG -E UTF8 -D '/var/lib/postgres/data'
exit

# do not do this in Production machines
sudo sed -i.bak 's/ident/trust/' /var/lib/postgres/data/pg_hba.conf
sudo systemctl start postgresql
sudo systemctl enable postgresql

sudo -u postgres -i
createuser --interactive # create with your username and superuser role
createdb youruser
exit
sudo systemctl restart postgresql


vmware-tools-patches
https://github.com/rasa/vmware-tools-patches
Skipping rebuilding initrd boot image for kernel as no drivers to be included
in boot image were installed by this installer.


NOTE: both /etc/vmware-tools/GuestProxyData/server/key.pem and
      /etc/vmware-tools/GuestProxyData/server/cert.pem already exist.
      They are not generated again. To regenerate them by force,
      use the "vmware-guestproxycerttool -g -f" command.

The configuration of VMware Tools 10.3.10 build-12406962 for Linux for this
running kernel completed successfully.

You must restart your X session before any mouse or graphics changes take
effect.

To enable advanced X features (e.g., guest resolution fit, drag and drop, and
file and text copy/paste), you will need to do one (or more) of the following:
1. Manually start /usr/bin/vmware-user
2. Log out and log back into your desktop session
3. Restart your X session.

https://www.linuxsecrets.com/archlinux-wiki/wiki.archlinux.org/index.php/VMware/Installing_Arch_as_a_guest.html

gtk
https://wiki.gnome.org/HowDoI/
https://python-gtk-3-tutorial.readthedocs.io/en/latest/application.html


https://www.reddit.com/r/archlinux/comments/b0ona0/vmtools_on_arch_linux_full_screen_or_resizing/

Resolution

        Install OpenVMTools

    sudo pacman -S open-vm-tools

    2) Install drivers and libraries

    sudo pacman -Su xf86-input-vmmouse xf86-video-vmware mesa gtk2 gtkmm

    3) Create / Edit /etc/X11/Xwrapper.config

    sudo echo needs_root_rights=yes >>/etc/X11/Xwrapper.config

    4) Enable and start vmtoolsd.service

    sudo systemctl enable vmtoolsd

    sudo systemctl start vmtoolsd
    
https://www.linux.org/threads/users-on-a-system.4228/


https://www.akitaonrails.com/2017/01/10/arch-linux-best-distro-ever

https://arachnoid.com/index.html
http://code.activestate.com/recipes/578774-list-mysql-databases-in-a-gtktreeview/



https://www.mono-project.com/docs/getting-started/mono-basics/
http://zetcode.com/gui/csharpwinforms/snake/    

Vim
https://github.com/tao12345666333/vim
wget --no-check-certificate https://raw.githubusercontent.com/tao12345666333/vim/master/vimrc -O $HOME/.vimrc
vim -E -u $HOME/.vimrc +qall



https://www.linux.org/threads/users-on-a-system.4228/


